{"version":3,"sources":["jquery.pjax.js"],"names":["$","fnPjax","selector","container","options","context","this","on","event","opts","extend","optionsFor","attr","handleClick","link","currentTarget","tagName","toUpperCase","which","metaKey","ctrlKey","shiftKey","altKey","location","protocol","hostname","href","indexOf","stripHash","isDefaultPrevented","defaults","url","target","clickEvent","Event","trigger","pjax","preventDefault","handleSubmit","form","$form","type","undefined","window","FormData","data","processData","contentType","find","length","serializeArray","fire","args","props","relatedTarget","ajaxSettings","isFunction","hash","parseURL","findContainerFor","isArray","push","name","value","_pjax","timeoutTimer","beforeSend","xhr","settings","timeout","setRequestHeader","setTimeout","abort","requestUrl","stripInternalParams","complete","textStatus","clearTimeout","error","errorThrown","extractContainer","allowed","locationReplace","success","status","previousState","state","currentVersion","version","latestVersion","getResponseHeader","contents","id","uniqueId","title","fragment","replace","history","replaceState","blurFocus","contains","document","activeElement","blur","e","html","autofocusEl","last","focus","executeScriptTags","scripts","scrollTo","decodeURIComponent","slice","getElementById","getElementsByName","offset","top","scrollTop","abortXHR","ajax","readyState","cachePush","cloneContents","pushState","pjaxReload","onPjaxPopstate","initialPop","direction","initialURL","cache","cacheMapping","cachePop","popstateEvent","beforeReplaceEvent","offsetHeight","fallbackPjax","method","action","style","append","toLowerCase","each","split","index","pair","key","body","submit","onreadystatechange","noop","Date","getTime","cloned","clone","src","jQuery","_data","search","a","createElement","isPlainObject","findAll","elems","filter","add","parseHTML","obj","fullDocument","test","serverUrl","$head","match","$body","text","$fragment","first","not","is","remove","trim","existingScripts","matchedScripts","script","head","appendChild","cacheBackStack","trimCacheStack","cacheForwardStack","maxCacheLength","pushStack","popStack","pop","stack","shift","findVersion","enable","fn","disable","click","reload","dataType","off","initialState","inArray","support","navigator","userAgent"],"mappings":"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","file":"jquery.pjax.min.js","sourcesContent":["/*!\n * Copyright 2012, Chris Wanstrath\n * Released under the MIT License\n * https://github.com/defunkt/jquery-pjax\n */\n\n(function($){\n\n// When called on a container with a selector, fetches the href with\n// ajax into the container or with the data-pjax attribute on the link\n// itself.\n//\n// Tries to make sure the back button and ctrl+click work the way\n// you'd expect.\n//\n// Exported as $.fn.pjax\n//\n// Accepts a jQuery ajax options object that may include these\n// pjax specific options:\n//\n//\n// container - Where to stick the response body. Usually a String selector.\n//             $(container).html(xhr.responseBody)\n//             (default: current jquery context)\n//      push - Whether to pushState the URL. Defaults to true (of course).\n//   replace - Want to use replaceState instead? That's cool.\n//\n// For convenience the second parameter can be either the container or\n// the options object.\n//\n// Returns the jQuery object\nfunction fnPjax(selector, container, options) {\n  var context = this\n  return this.on('click.pjax', selector, function(event) {\n    var opts = $.extend({}, optionsFor(container, options))\n    if (!opts.container)\n      opts.container = $(this).attr('data-pjax') || context\n    handleClick(event, opts)\n  })\n}\n\n// Public: pjax on click handler\n//\n// Exported as $.pjax.click.\n//\n// event   - \"click\" jQuery.Event\n// options - pjax options\n//\n// Examples\n//\n//   $(document).on('click', 'a', $.pjax.click)\n//   // is the same as\n//   $(document).pjax('a')\n//\n//  $(document).on('click', 'a', function(event) {\n//    var container = $(this).closest('[data-pjax-container]')\n//    $.pjax.click(event, container)\n//  })\n//\n// Returns nothing.\nfunction handleClick(event, container, options) {\n  options = optionsFor(container, options)\n\n  var link = event.currentTarget\n\n  if (link.tagName.toUpperCase() !== 'A')\n    throw \"$.fn.pjax or $.pjax.click requires an anchor element\"\n\n  // Middle click, cmd click, and ctrl click should open\n  // links in a new tab as normal.\n  if ( event.which > 1 || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey )\n    return\n\n  // Ignore cross origin links\n  if ( location.protocol !== link.protocol || location.hostname !== link.hostname )\n    return\n\n  // Ignore case when a hash is being tacked on the current URL\n  if ( link.href.indexOf('#') > -1 && stripHash(link) == stripHash(location) )\n    return\n\n  // Ignore event with default prevented\n  if (event.isDefaultPrevented())\n    return\n\n  var defaults = {\n    url: link.href,\n    container: $(link).attr('data-pjax'),\n    target: link\n  }\n\n  var opts = $.extend({}, defaults, options)\n  var clickEvent = $.Event('pjax:click')\n  $(link).trigger(clickEvent, [opts])\n\n  if (!clickEvent.isDefaultPrevented()) {\n    pjax(opts)\n    event.preventDefault()\n    $(link).trigger('pjax:clicked', [opts])\n  }\n}\n\n// Public: pjax on form submit handler\n//\n// Exported as $.pjax.submit\n//\n// event   - \"click\" jQuery.Event\n// options - pjax options\n//\n// Examples\n//\n//  $(document).on('submit', 'form', function(event) {\n//    var container = $(this).closest('[data-pjax-container]')\n//    $.pjax.submit(event, container)\n//  })\n//\n// Returns nothing.\nfunction handleSubmit(event, container, options) {\n  options = optionsFor(container, options)\n\n  var form = event.currentTarget\n  var $form = $(form)\n\n  if (form.tagName.toUpperCase() !== 'FORM')\n    throw \"$.pjax.submit requires a form element\"\n\n  var defaults = {\n    type: ($form.attr('method') || 'GET').toUpperCase(),\n    url: $form.attr('action'),\n    container: $form.attr('data-pjax'),\n    target: form\n  }\n\n  if (defaults.type !== 'GET' && window.FormData !== undefined) {\n    defaults.data = new FormData(form);\n    defaults.processData = false;\n    defaults.contentType = false;\n  } else {\n    // Can't handle file uploads, exit\n    if ($(form).find(':file').length) {\n      return;\n    }\n\n    // Fallback to manually serializing the fields\n    defaults.data = $(form).serializeArray();\n  }\n\n  pjax($.extend({}, defaults, options))\n\n  event.preventDefault()\n}\n\n// Loads a URL with ajax, puts the response body inside a container,\n// then pushState()'s the loaded URL.\n//\n// Works just like $.ajax in that it accepts a jQuery ajax\n// settings object (with keys like url, type, data, etc).\n//\n// Accepts these extra keys:\n//\n// container - Where to stick the response body.\n//             $(container).html(xhr.responseBody)\n//      push - Whether to pushState the URL. Defaults to true (of course).\n//   replace - Want to use replaceState instead? That's cool.\n//\n// Use it just like $.ajax:\n//\n//   var xhr = $.pjax({ url: this.href, container: '#main' })\n//   console.log( xhr.readyState )\n//\n// Returns whatever $.ajax returns.\nfunction pjax(options) {\n  options = $.extend(true, {}, $.ajaxSettings, pjax.defaults, options)\n\n  if ($.isFunction(options.url)) {\n    options.url = options.url()\n  }\n\n  var target = options.target\n\n  var hash = parseURL(options.url).hash\n\n  var context = options.context = findContainerFor(options.container)\n\n  // We want the browser to maintain two separate internal caches: one\n  // for pjax'd partial page loads and one for normal page loads.\n  // Without adding this secret parameter, some browsers will often\n  // confuse the two.\n  if (!options.data) options.data = {}\n  if ($.isArray(options.data)) {\n    options.data.push({name: '_pjax', value: context.selector})\n  } else {\n    options.data._pjax = context.selector\n  }\n\n  function fire(type, args, props) {\n    if (!props) props = {}\n    props.relatedTarget = target\n    var event = $.Event(type, props)\n    context.trigger(event, args)\n    return !event.isDefaultPrevented()\n  }\n\n  var timeoutTimer\n\n  options.beforeSend = function(xhr, settings) {\n    // No timeout for non-GET requests\n    // Its not safe to request the resource again with a fallback method.\n    if (settings.type !== 'GET') {\n      settings.timeout = 0\n    }\n\n    xhr.setRequestHeader('X-PJAX', 'true')\n    xhr.setRequestHeader('X-PJAX-Container', context.selector)\n\n    if (!fire('pjax:beforeSend', [xhr, settings]))\n      return false\n\n    if (settings.timeout > 0) {\n      timeoutTimer = setTimeout(function() {\n        if (fire('pjax:timeout', [xhr, options]))\n          xhr.abort('timeout')\n      }, settings.timeout)\n\n      // Clear timeout setting so jquerys internal timeout isn't invoked\n      settings.timeout = 0\n    }\n\n    var url = parseURL(settings.url)\n    if (hash) url.hash = hash\n    options.requestUrl = stripInternalParams(url)\n  }\n\n  options.complete = function(xhr, textStatus) {\n    if (timeoutTimer)\n      clearTimeout(timeoutTimer)\n\n    fire('pjax:complete', [xhr, textStatus, options])\n\n    fire('pjax:end', [xhr, options])\n  }\n\n  options.error = function(xhr, textStatus, errorThrown) {\n    var container = extractContainer(\"\", xhr, options)\n\n    var allowed = fire('pjax:error', [xhr, textStatus, errorThrown, options])\n    if (options.type == 'GET' && textStatus !== 'abort' && allowed) {\n      locationReplace(container.url)\n    }\n  }\n\n  options.success = function(data, status, xhr) {\n    var previousState = pjax.state;\n\n    // If $.pjax.defaults.version is a function, invoke it first.\n    // Otherwise it can be a static string.\n    var currentVersion = (typeof $.pjax.defaults.version === 'function') ?\n      $.pjax.defaults.version() :\n      $.pjax.defaults.version\n\n    var latestVersion = xhr.getResponseHeader('X-PJAX-Version')\n\n    var container = extractContainer(data, xhr, options)\n\n    var url = parseURL(container.url)\n    if (hash) {\n      url.hash = hash\n      container.url = url.href\n    }\n\n    // If there is a layout version mismatch, hard load the new url\n    if (currentVersion && latestVersion && currentVersion !== latestVersion) {\n      locationReplace(container.url)\n      return\n    }\n\n    // If the new response is missing a body, hard load the page\n    if (!container.contents) {\n      locationReplace(container.url)\n      return\n    }\n\n    pjax.state = {\n      id: options.id || uniqueId(),\n      url: container.url,\n      title: container.title,\n      container: context.selector,\n      fragment: options.fragment,\n      timeout: options.timeout\n    }\n\n    if (options.push || options.replace) {\n      window.history.replaceState(pjax.state, container.title, container.url)\n    }\n\n    // Only blur the focus if the focused element is within the container.\n    var blurFocus = $.contains(options.container, document.activeElement)\n\n    // Clear out any focused controls before inserting new page contents.\n    if (blurFocus) {\n      try {\n        document.activeElement.blur()\n      } catch (e) { }\n    }\n\n    if (container.title) document.title = container.title\n\n    fire('pjax:beforeReplace', [container.contents, options], {\n      state: pjax.state,\n      previousState: previousState\n    })\n    context.html(container.contents)\n\n    // FF bug: Won't autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = context.find('input[autofocus], textarea[autofocus]').last()[0]\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    executeScriptTags(container.scripts)\n\n    var scrollTo = options.scrollTo\n\n    // Ensure browser scrolls to the element referenced by the URL anchor\n    if (hash) {\n      var name = decodeURIComponent(hash.slice(1))\n      var target = document.getElementById(name) || document.getElementsByName(name)[0]\n      if (target) scrollTo = $(target).offset().top\n    }\n\n    if (typeof scrollTo == 'number') $(window).scrollTop(scrollTo)\n\n    fire('pjax:success', [data, status, xhr, options])\n  }\n\n\n  // Initialize pjax.state for the initial page load. Assume we're\n  // using the container and options of the link we're loading for the\n  // back button to the initial page. This ensures good back button\n  // behavior.\n  if (!pjax.state) {\n    pjax.state = {\n      id: uniqueId(),\n      url: window.location.href,\n      title: document.title,\n      container: context.selector,\n      fragment: options.fragment,\n      timeout: options.timeout\n    }\n    window.history.replaceState(pjax.state, document.title)\n  }\n\n  // Cancel the current request if we're already pjaxing\n  abortXHR(pjax.xhr)\n\n  pjax.options = options\n  var xhr = pjax.xhr = $.ajax(options)\n\n  if (xhr.readyState > 0) {\n    if (options.push && !options.replace) {\n      // Cache current container element before replacing it\n      cachePush(pjax.state.id, cloneContents(context))\n\n      window.history.pushState(null, \"\", options.requestUrl)\n    }\n\n    fire('pjax:start', [xhr, options])\n    fire('pjax:send', [xhr, options])\n  }\n\n  return pjax.xhr\n}\n\n// Public: Reload current page with pjax.\n//\n// Returns whatever $.pjax returns.\nfunction pjaxReload(container, options) {\n  var defaults = {\n    url: window.location.href,\n    push: false,\n    replace: true,\n    scrollTo: false\n  }\n\n  return pjax($.extend(defaults, optionsFor(container, options)))\n}\n\n// Internal: Hard replace current state with url.\n//\n// Work for around WebKit\n//   https://bugs.webkit.org/show_bug.cgi?id=93506\n//\n// Returns nothing.\nfunction locationReplace(url) {\n  window.history.replaceState(null, \"\", pjax.state.url)\n  window.location.replace(url)\n}\n\n\nvar initialPop = true\nvar initialURL = window.location.href\nvar initialState = window.history.state\n\n// Initialize $.pjax.state if possible\n// Happens when reloading a page and coming forward from a different\n// session history.\nif (initialState && initialState.container) {\n  pjax.state = initialState\n}\n\n// Non-webkit browsers don't fire an initial popstate event\nif ('state' in window.history) {\n  initialPop = false\n}\n\n// popstate handler takes care of the back and forward buttons\n//\n// You probably shouldn't use pjax on pages with other pushState\n// stuff yet.\nfunction onPjaxPopstate(event) {\n\n  // Hitting back or forward should override any pending PJAX request.\n  if (!initialPop) {\n    abortXHR(pjax.xhr)\n  }\n\n  var previousState = pjax.state\n  var state = event.state\n  var direction\n\n  if (state && state.container) {\n    // When coming forward from a separate history session, will get an\n    // initial pop with a state we are already at. Skip reloading the current\n    // page.\n    if (initialPop && initialURL == state.url) return\n\n    if (previousState) {\n      // If popping back to the same state, just skip.\n      // Could be clicking back from hashchange rather than a pushState.\n      if (previousState.id === state.id) return\n\n      // Since state IDs always increase, we can deduce the navigation direction\n      direction = previousState.id < state.id ? 'forward' : 'back'\n    }\n\n    var cache = cacheMapping[state.id] || []\n    var container = $(cache[0] || state.container), contents = cache[1]\n\n    if (container.length) {\n      if (previousState) {\n        // Cache current container before replacement and inform the\n        // cache which direction the history shifted.\n        cachePop(direction, previousState.id, cloneContents(container))\n      }\n\n      var popstateEvent = $.Event('pjax:popstate', {\n        state: state,\n        direction: direction\n      })\n      container.trigger(popstateEvent)\n\n      var options = {\n        id: state.id,\n        url: state.url,\n        container: container,\n        push: false,\n        fragment: state.fragment,\n        timeout: state.timeout,\n        scrollTo: false\n      }\n\n      if (contents) {\n        container.trigger('pjax:start', [null, options])\n\n        pjax.state = state\n        if (state.title) document.title = state.title\n        var beforeReplaceEvent = $.Event('pjax:beforeReplace', {\n          state: state,\n          previousState: previousState\n        })\n        container.trigger(beforeReplaceEvent, [contents, options])\n        container.html(contents)\n\n        container.trigger('pjax:end', [null, options])\n      } else {\n        pjax(options)\n      }\n\n      // Force reflow/relayout before the browser tries to restore the\n      // scroll position.\n      container[0].offsetHeight\n    } else {\n      locationReplace(location.href)\n    }\n  }\n  initialPop = false\n}\n\n// Fallback version of main pjax function for browsers that don't\n// support pushState.\n//\n// Returns nothing since it retriggers a hard form submission.\nfunction fallbackPjax(options) {\n  var url = $.isFunction(options.url) ? options.url() : options.url,\n      method = options.type ? options.type.toUpperCase() : 'GET'\n\n  var form = $('<form>', {\n    method: method === 'GET' ? 'GET' : 'POST',\n    action: url,\n    style: 'display:none'\n  })\n\n  if (method !== 'GET' && method !== 'POST') {\n    form.append($('<input>', {\n      type: 'hidden',\n      name: '_method',\n      value: method.toLowerCase()\n    }))\n  }\n\n  var data = options.data\n  if (typeof data === 'string') {\n    $.each(data.split('&'), function(index, value) {\n      var pair = value.split('=')\n      form.append($('<input>', {type: 'hidden', name: pair[0], value: pair[1]}))\n    })\n  } else if ($.isArray(data)) {\n    $.each(data, function(index, value) {\n      form.append($('<input>', {type: 'hidden', name: value.name, value: value.value}))\n    })\n  } else if (typeof data === 'object') {\n    var key\n    for (key in data)\n      form.append($('<input>', {type: 'hidden', name: key, value: data[key]}))\n  }\n\n  $(document.body).append(form)\n  form.submit()\n}\n\n// Internal: Abort an XmlHttpRequest if it hasn't been completed,\n// also removing its event handlers.\nfunction abortXHR(xhr) {\n  if ( xhr && xhr.readyState < 4) {\n    xhr.onreadystatechange = $.noop\n    xhr.abort()\n  }\n}\n\n// Internal: Generate unique id for state object.\n//\n// Use a timestamp instead of a counter since ids should still be\n// unique across page loads.\n//\n// Returns Number.\nfunction uniqueId() {\n  return (new Date).getTime()\n}\n\nfunction cloneContents(container) {\n  var cloned = container.clone()\n  // Unmark script tags as already being eval'd so they can get executed again\n  // when restored from cache. HAXX: Uses jQuery internal method.\n  cloned.find('script').each(function(){\n    if (!this.src) jQuery._data(this, 'globalEval', false)\n  })\n  return [container.selector, cloned.contents()]\n}\n\n// Internal: Strip internal query params from parsed URL.\n//\n// Returns sanitized url.href String.\nfunction stripInternalParams(url) {\n  url.search = url.search.replace(/([?&])(_pjax|_)=[^&]*/g, '')\n  return url.href.replace(/\\?($|#)/, '$1')\n}\n\n// Internal: Parse URL components and returns a Locationish object.\n//\n// url - String URL\n//\n// Returns HTMLAnchorElement that acts like Location.\nfunction parseURL(url) {\n  var a = document.createElement('a')\n  a.href = url\n  return a\n}\n\n// Internal: Return the `href` component of given URL object with the hash\n// portion removed.\n//\n// location - Location or HTMLAnchorElement\n//\n// Returns String\nfunction stripHash(location) {\n  return location.href.replace(/#.*/, '')\n}\n\n// Internal: Build options Object for arguments.\n//\n// For convenience the first parameter can be either the container or\n// the options object.\n//\n// Examples\n//\n//   optionsFor('#container')\n//   // => {container: '#container'}\n//\n//   optionsFor('#container', {push: true})\n//   // => {container: '#container', push: true}\n//\n//   optionsFor({container: '#container', push: true})\n//   // => {container: '#container', push: true}\n//\n// Returns options Object.\nfunction optionsFor(container, options) {\n  // Both container and options\n  if ( container && options )\n    options.container = container\n\n  // First argument is options Object\n  else if ( $.isPlainObject(container) )\n    options = container\n\n  // Only container\n  else\n    options = {container: container}\n\n  // Find and validate container\n  if (options.container)\n    options.container = findContainerFor(options.container)\n\n  return options\n}\n\n// Internal: Find container element for a variety of inputs.\n//\n// Because we can't persist elements using the history API, we must be\n// able to find a String selector that will consistently find the Element.\n//\n// container - A selector String, jQuery object, or DOM Element.\n//\n// Returns a jQuery object whose context is `document` and has a selector.\nfunction findContainerFor(container) {\n  container = $(container)\n\n  if ( !container.length ) {\n    throw \"no pjax container for \" + container.selector\n  } else if ( container.selector !== '' && container.context === document ) {\n    return container\n  } else if ( container.attr('id') ) {\n    return $('#' + container.attr('id'))\n  } else {\n    throw \"cant get selector for pjax container!\"\n  }\n}\n\n// Internal: Filter and find all elements matching the selector.\n//\n// Where $.fn.find only matches descendants, findAll will test all the\n// top level elements in the jQuery object as well.\n//\n// elems    - jQuery object of Elements\n// selector - String selector to match\n//\n// Returns a jQuery object.\nfunction findAll(elems, selector) {\n  return elems.filter(selector).add(elems.find(selector));\n}\n\nfunction parseHTML(html) {\n  return $.parseHTML(html, document, true)\n}\n\n// Internal: Extracts container and metadata from response.\n//\n// 1. Extracts X-PJAX-URL header if set\n// 2. Extracts inline <title> tags\n// 3. Builds response Element and extracts fragment if set\n//\n// data    - String response data\n// xhr     - XHR response\n// options - pjax options Object\n//\n// Returns an Object with url, title, and contents keys.\nfunction extractContainer(data, xhr, options) {\n  var obj = {}, fullDocument = /<html/i.test(data)\n\n  // Prefer X-PJAX-URL header if it was set, otherwise fallback to\n  // using the original requested url.\n  var serverUrl = xhr.getResponseHeader('X-PJAX-URL')\n  obj.url = serverUrl ? stripInternalParams(parseURL(serverUrl)) : options.requestUrl\n\n  // Attempt to parse response html into elements\n  if (fullDocument) {\n    var $head = $(parseHTML(data.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0]))\n    var $body = $(parseHTML(data.match(/<body[^>]*>([\\s\\S.]*)<\\/body>/i)[0]))\n  } else {\n    var $head = $body = $(parseHTML(data))\n  }\n\n  // If response data is empty, return fast\n  if ($body.length === 0)\n    return obj\n\n  // If there's a <title> tag in the header, use it as\n  // the page's title.\n  obj.title = findAll($head, 'title').last().text()\n\n  if (options.fragment) {\n    // If they specified a fragment, look for it in the response\n    // and pull it out.\n    if (options.fragment === 'body') {\n      var $fragment = $body\n    } else {\n      var $fragment = findAll($body, options.fragment).first()\n    }\n\n    if ($fragment.length) {\n      obj.contents = options.fragment === 'body' ? $fragment : $fragment.contents()\n\n      // If there's no title, look for data-title and title attributes\n      // on the fragment\n      if (!obj.title)\n        obj.title = $fragment.attr('title') || $fragment.data('title')\n    }\n\n  } else if (!fullDocument) {\n    obj.contents = $body\n  }\n\n  // Clean up any <title> tags\n  if (obj.contents) {\n    // Remove any parent title elements\n    obj.contents = obj.contents.not(function() { return $(this).is('title') })\n\n    // Then scrub any titles from their descendants\n    obj.contents.find('title').remove()\n\n    // Gather all script[src] elements\n    obj.scripts = findAll(obj.contents, 'script[src]').remove()\n    obj.contents = obj.contents.not(obj.scripts)\n  }\n\n  // Trim any whitespace off the title\n  if (obj.title) obj.title = $.trim(obj.title)\n\n  return obj\n}\n\n// Load an execute scripts using standard script request.\n//\n// Avoids jQuery's traditional $.getScript which does a XHR request and\n// globalEval.\n//\n// scripts - jQuery object of script Elements\n//\n// Returns nothing.\nfunction executeScriptTags(scripts) {\n  if (!scripts) return\n\n  var existingScripts = $('script[src]')\n\n  scripts.each(function() {\n    var src = this.src\n    var matchedScripts = existingScripts.filter(function() {\n      return this.src === src\n    })\n    if (matchedScripts.length) return\n\n    var script = document.createElement('script')\n    var type = $(this).attr('type')\n    if (type) script.type = type\n    script.src = $(this).attr('src')\n    document.head.appendChild(script)\n  })\n}\n\n// Internal: History DOM caching class.\nvar cacheMapping      = {}\nvar cacheForwardStack = []\nvar cacheBackStack    = []\n\n// Push previous state id and container contents into the history\n// cache. Should be called in conjunction with `pushState` to save the\n// previous container contents.\n//\n// id    - State ID Number\n// value - DOM Element to cache\n//\n// Returns nothing.\nfunction cachePush(id, value) {\n  cacheMapping[id] = value\n  cacheBackStack.push(id)\n\n  // Remove all entries in forward history stack after pushing a new page.\n  trimCacheStack(cacheForwardStack, 0)\n\n  // Trim back history stack to max cache length.\n  trimCacheStack(cacheBackStack, pjax.defaults.maxCacheLength)\n}\n\n// Shifts cache from directional history cache. Should be\n// called on `popstate` with the previous state id and container\n// contents.\n//\n// direction - \"forward\" or \"back\" String\n// id        - State ID Number\n// value     - DOM Element to cache\n//\n// Returns nothing.\nfunction cachePop(direction, id, value) {\n  var pushStack, popStack\n  cacheMapping[id] = value\n\n  if (direction === 'forward') {\n    pushStack = cacheBackStack\n    popStack  = cacheForwardStack\n  } else {\n    pushStack = cacheForwardStack\n    popStack  = cacheBackStack\n  }\n\n  pushStack.push(id)\n  if (id = popStack.pop())\n    delete cacheMapping[id]\n\n  // Trim whichever stack we just pushed to to max cache length.\n  trimCacheStack(pushStack, pjax.defaults.maxCacheLength)\n}\n\n// Trim a cache stack (either cacheBackStack or cacheForwardStack) to be no\n// longer than the specified length, deleting cached DOM elements as necessary.\n//\n// stack  - Array of state IDs\n// length - Maximum length to trim to\n//\n// Returns nothing.\nfunction trimCacheStack(stack, length) {\n  while (stack.length > length)\n    delete cacheMapping[stack.shift()]\n}\n\n// Public: Find version identifier for the initial page load.\n//\n// Returns String version or undefined.\nfunction findVersion() {\n  return $('meta').filter(function() {\n    var name = $(this).attr('http-equiv')\n    return name && name.toUpperCase() === 'X-PJAX-VERSION'\n  }).attr('content')\n}\n\n// Install pjax functions on $.pjax to enable pushState behavior.\n//\n// Does nothing if already enabled.\n//\n// Examples\n//\n//     $.pjax.enable()\n//\n// Returns nothing.\nfunction enable() {\n  $.fn.pjax = fnPjax\n  $.pjax = pjax\n  $.pjax.enable = $.noop\n  $.pjax.disable = disable\n  $.pjax.click = handleClick\n  $.pjax.submit = handleSubmit\n  $.pjax.reload = pjaxReload\n  $.pjax.defaults = {\n    timeout: 650,\n    push: true,\n    replace: false,\n    type: 'GET',\n    dataType: 'html',\n    scrollTo: 0,\n    maxCacheLength: 20,\n    version: findVersion\n  }\n  $(window).on('popstate.pjax', onPjaxPopstate)\n}\n\n// Disable pushState behavior.\n//\n// This is the case when a browser doesn't support pushState. It is\n// sometimes useful to disable pushState for debugging on a modern\n// browser.\n//\n// Examples\n//\n//     $.pjax.disable()\n//\n// Returns nothing.\nfunction disable() {\n  $.fn.pjax = function() { return this }\n  $.pjax = fallbackPjax\n  $.pjax.enable = enable\n  $.pjax.disable = $.noop\n  $.pjax.click = $.noop\n  $.pjax.submit = $.noop\n  $.pjax.reload = function() { window.location.reload() }\n\n  $(window).off('popstate.pjax', onPjaxPopstate)\n}\n\n\n// Add the state property to jQuery's event object so we can use it in\n// $(window).bind('popstate')\nif ( $.inArray('state', $.event.props) < 0 )\n  $.event.props.push('state')\n\n// Is pjax supported by this browser?\n$.support.pjax =\n  window.history && window.history.pushState && window.history.replaceState &&\n  // pushState isn't reliable on iOS until 5.\n  !navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)\n\n$.support.pjax ? enable() : disable()\n\n})(jQuery);\n"],"sourceRoot":"/source/"}